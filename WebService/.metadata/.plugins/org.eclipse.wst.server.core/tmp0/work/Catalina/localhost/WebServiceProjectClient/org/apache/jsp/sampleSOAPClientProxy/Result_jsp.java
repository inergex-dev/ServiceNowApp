/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.41
 * Generated at: 2013-07-16 19:48:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sampleSOAPClientProxy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<TITLE>Result</TITLE>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("<H1>Result</H1>\r\n");
      out.write("\r\n");
      com.inergex.servicenow.test.SOAPClientProxy sampleSOAPClientProxyid = null;
      synchronized (session) {
        sampleSOAPClientProxyid = (com.inergex.servicenow.test.SOAPClientProxy) _jspx_page_context.getAttribute("sampleSOAPClientProxyid", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (sampleSOAPClientProxyid == null){
          sampleSOAPClientProxyid = new com.inergex.servicenow.test.SOAPClientProxy();
          _jspx_page_context.setAttribute("sampleSOAPClientProxyid", sampleSOAPClientProxyid, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');

if (request.getParameter("endpoint") != null && request.getParameter("endpoint").length() > 0)
sampleSOAPClientProxyid.setEndpoint(request.getParameter("endpoint"));

      out.write("\r\n");
      out.write("\r\n");

String method = request.getParameter("method");
int methodID = 0;
if (method == null) methodID = -1;

if(methodID != -1) methodID = Integer.parseInt(method);
boolean gotMethod = false;

try {
switch (methodID){ 
case 2:
        gotMethod = true;
        java.lang.String getEndpoint2mtemp = sampleSOAPClientProxyid.getEndpoint();
if(getEndpoint2mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getEndpoint2mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempResultreturnp3 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getEndpoint2mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp3 );
      out.write("\r\n");
      out.write("        ");

}
break;
case 5:
        gotMethod = true;
        String endpoint_0id=  request.getParameter("endpoint8");
            java.lang.String endpoint_0idTemp = null;
        if(!endpoint_0id.equals("")){
         endpoint_0idTemp  = endpoint_0id;
        }
        sampleSOAPClientProxyid.setEndpoint(endpoint_0idTemp);
break;
case 10:
        gotMethod = true;
        com.inergex.servicenow.test.SOAPClient getSOAPClient10mtemp = sampleSOAPClientProxyid.getSOAPClient();
if(getSOAPClient10mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getSOAPClient10mtemp );
      out.write('\r');
      out.write('\n');

}else{
        if(getSOAPClient10mtemp!= null){
        String tempreturnp11 = getSOAPClient10mtemp.toString();
        
      out.write("\r\n");
      out.write("        ");
      out.print(tempreturnp11);
      out.write("\r\n");
      out.write("        ");

        }}
break;
case 13:
        gotMethod = true;
        String user_1id=  request.getParameter("user16");
            java.lang.String user_1idTemp = null;
        if(!user_1id.equals("")){
         user_1idTemp  = user_1id;
        }
        String pass_2id=  request.getParameter("pass18");
            java.lang.String pass_2idTemp = null;
        if(!pass_2id.equals("")){
         pass_2idTemp  = pass_2id;
        }
        String open_3id=  request.getParameter("open20");
        boolean open_3idTemp  = Boolean.valueOf(open_3id).booleanValue();
        java.lang.String getTickets13mtemp = sampleSOAPClientProxyid.getTickets(user_1idTemp,pass_2idTemp,open_3idTemp);
if(getTickets13mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getTickets13mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempResultreturnp14 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getTickets13mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp14 );
      out.write("\r\n");
      out.write("        ");

}
break;
case 22:
        gotMethod = true;
        String user_4id=  request.getParameter("user25");
            java.lang.String user_4idTemp = null;
        if(!user_4id.equals("")){
         user_4idTemp  = user_4id;
        }
        String pass_5id=  request.getParameter("pass27");
            java.lang.String pass_5idTemp = null;
        if(!pass_5id.equals("")){
         pass_5idTemp  = pass_5id;
        }
        boolean authenticatLogin22mtemp = sampleSOAPClientProxyid.authenticatLogin(user_4idTemp,pass_5idTemp);
        String tempResultreturnp23 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(authenticatLogin22mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp23 );
      out.write("\r\n");
      out.write("        ");

break;
case 29:
        gotMethod = true;
        String user_6id=  request.getParameter("user32");
            java.lang.String user_6idTemp = null;
        if(!user_6id.equals("")){
         user_6idTemp  = user_6id;
        }
        String pass_7id=  request.getParameter("pass34");
            java.lang.String pass_7idTemp = null;
        if(!pass_7id.equals("")){
         pass_7idTemp  = pass_7id;
        }
        String short_description_8id=  request.getParameter("short_description36");
            java.lang.String short_description_8idTemp = null;
        if(!short_description_8id.equals("")){
         short_description_8idTemp  = short_description_8id;
        }
        String comments_9id=  request.getParameter("comments38");
            java.lang.String comments_9idTemp = null;
        if(!comments_9id.equals("")){
         comments_9idTemp  = comments_9id;
        }
        java.lang.String createIncident29mtemp = sampleSOAPClientProxyid.createIncident(user_6idTemp,pass_7idTemp,short_description_8idTemp,comments_9idTemp);
if(createIncident29mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(createIncident29mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempResultreturnp30 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(createIncident29mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp30 );
      out.write("\r\n");
      out.write("        ");

}
break;
}
} catch (Exception e) { 

      out.write("\r\n");
      out.write("Exception: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.toString()) );
      out.write("\r\n");
      out.write("Message: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.getMessage()) );
      out.write('\r');
      out.write('\n');

return;
}
if(!gotMethod){

      out.write("\r\n");
      out.write("result: N/A\r\n");

}

      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
